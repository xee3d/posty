require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Codegen 완전 비활성화
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['USE_CODEGEN'] = '0'
ENV['NODE_BINARY'] = '/Users/ethanchoi/.nvm/versions/node/v20.11.0/bin/node'

platform :ios, '14.0'
use_modular_headers!

target 'Posty' do
  config = use_native_modules!
  
  # React Native Pods 사용 (새 아키텍처 비활성화)
  use_react_native!(
    :path => config[:reactNativePath],
    # 새 아키텍처 비활성화
    :hermes_enabled => false,
    :fabric_enabled => false,
    # 기타 설정
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  
  # Firebase 제거 - Vercel 기반 소셜 로그인으로 대체
  
  # 소셜 로그인
  pod 'RNGoogleSignin', :path => '../node_modules/@react-native-google-signin/google-signin'
  pod 'kakao-login', :path => '../node_modules/@react-native-seoul/kakao-login'
  pod 'RNNaverLogin', :path => '../node_modules/@react-native-seoul/naver-login'
  
  # Google Mobile Ads
  pod 'RNGoogleMobileAds', :path => '../node_modules/react-native-google-mobile-ads'
  
  # gRPC 관련 의존성 완전 제거 (Firebase 제거로 인해 불필요)

  post_install do |installer|
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
    

    
    # Fix module redefinition
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
        
        # C++20 설정 (원래 설정 유지)
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        # 모든 타겟에 GNU C 확장 적용 (typeof 등 지원)
        config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu99'
        
        # ReactCommon 모듈 중복 완전 해결
        config.build_settings['OTHER_SWIFT_FLAGS'] = '$(inherited) -Xcc -Wno-error=non-modular-include-in-framework-module'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        
        # Boost 라이브러리 오류 우회
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BOOST_NO_CONFIG=1'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -DBOOST_NO_AUTO_PTR'
        config.build_settings['DEFINES_MODULE'] = 'NO'
        config.build_settings['SWIFT_SUPPRESS_WARNINGS'] = 'YES'
        
        # 중복 모듈 정의 완전 무시
        config.build_settings['CLANG_WARN_DUPLICATE_METHOD_MATCH'] = 'NO'
        config.build_settings['GCC_WARN_ABOUT_MISSING_PROTOTYPES'] = 'NO'
        config.build_settings['CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF'] = 'NO'
        
        # Xcode 버전 호환성을 위해 컴파일러 플래그 수정
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-error -Wno-duplicate-decl-specifier'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -Wno-error -Wno-duplicate-decl-specifier -DFOLLY_CFG_NO_COROUTINES=1'
        
        # RCT-Folly 특별 설정 - C++17 호환성 강화
        if target.name == 'RCT-Folly'
          config.build_settings['HEADER_SEARCH_PATHS'] = [
            "$(inherited)",  
            "$(PODS_ROOT)/DoubleConversion",
            "$(PODS_ROOT)/RCT-Folly",
            "${PODS_ROOT}/Headers/Private/RCT-Folly",
          ]
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
          config.build_settings['COMPILER_INDEX_STORE_ENABLE'] = 'NO'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BOOST_NO_AUTO_PTR=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'BOOST_NO_CXX98_FUNCTION_BASE=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FMT_HEADER_ONLY=1'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_HAVE_LOCALE=0'
          # boost와 fmt 라이브러리 충돌 방지
          config.build_settings['HEADER_SEARCH_PATHS'].delete_if { |path| path.include?('boost') || path.include?('fmt') }
        end
      end
    end
  end
end