rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 인증된 사용자만 접근 가능
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 자신의 데이터인지 확인
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // 사용자 문서
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // 게시물
    match /posts/{postId} {
      allow read: if isAuthenticated() && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['content', 'userId', 'createdAt']);
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid &&
        request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // 분석 데이터
    match /analytics/{analyticsId} {
      allow read: if isAuthenticated() && 
        (analyticsId == request.auth.uid || 
         analyticsId == request.auth.uid + '_legacy');
      allow write: if isAuthenticated() && 
        (analyticsId == request.auth.uid || 
         analyticsId == request.auth.uid + '_legacy');
    }
    
    // 토큰 거래 내역
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if false; // 거래 내역은 수정 불가
      allow delete: if false; // 거래 내역은 삭제 불가
    }
    
    // 미션
    match /missions/{missionId} {
      allow read: if isAuthenticated();
      allow write: if false; // 관리자만 수정 가능
    }
    
    // 사용자별 미션 진행 상황
    match /userMissions/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
  }
}