/**
 * 서버에서 받은 AI 생성 콘텐츠를 더 자연스럽게 만드는 후처리기
 */

// AI가 자주 사용하는 상투적인 표현들
const CLICHE_PHRASES = [
  '달래주는',
  '녹아내리는',
  '터지는 달콤함',
  '활력을 불어넣어',
  '영양소가 풍부',
  '최적의',
  '효과적이에요',
  '싹 싹 날려버리세요',
  '가득한',
  '다양한 영양소',
  '특히',
  '물론',
  '아름다운 순간',
  '특별한 순간',
  '소중한 시간',
  '의미 있는',
  '값진 경험',
  '잊을 수 없는',
  '마음을 울리는',
  '가슴 벅찬',
  '눈부신',
  '찬란한',
  '황홀한',
  '감동적인',
  '놀라운',
  '멋진 추억',
  '행복한 기억',
  '따뜻한 마음',
  '설레는 마음',
  '뿌듯한 마음',
  '감사한 마음',
  '벅찬 감동',
  '진한 여운',
  '깊은 울림',
  '특별한 의미',
  '소중한 추억',
  '아름다운 풍경',
  '멋진 하루',
  '완벽한 날씨',
  '최고의 순간',
  '환상적인',
  '매력적인',
  '인상적인',
  '잊지 못할',
  '영원히 기억될',
  '마음 속 깊이',
  '가슴 속에',
  '언제까지나',
  '영원토록',
  '끝없이',
  '무한한',
  '한없는',
];

// 자연스러운 대체 표현들
const NATURAL_REPLACEMENTS: Record<string, string[]> = {
  '아름다운 순간': ['이런 날', '오늘처럼', '지금 이 시간'],
  '특별한 순간': ['이런 때', '오늘같은 날', '지금'],
  '소중한 시간': ['좋은 시간', '이 시간', '함께한 시간'],
  '의미 있는': ['좋은', '뜻깊은', '기억에 남는'],
  '값진 경험': ['좋은 경험', '새로운 경험', '재밌는 일'],
  '잊을 수 없는': ['기억에 남는', '인상 깊은', '생각나는'],
  '마음을 울리는': ['마음에 드는', '감동받은', '좋았던'],
  '가슴 벅찬': ['기분 좋은', '행복한', '설레는'],
  '눈부신': ['맑은', '화창한', '좋은'],
  '찬란한': ['밝은', '환한', '맑은'],
  '황홀한': ['예쁜', '멋진', '좋은'],
  '감동적인': ['인상 깊은', '좋았던', '기억에 남는'],
  '놀라운': ['신기한', '대단한', '멋진'],
  '멋진 추억': ['좋은 기억', '재밌었던 일', '그때 그 시절'],
  '행복한 기억': ['좋았던 때', '그때', '그 시절'],
  '따뜻한 마음': ['좋은 마음', '편안한 마음', '포근함'],
  '설레는 마음': ['두근두근', '설렘', '기대감'],
  '뿌듯한 마음': ['뿌듯함', '만족감', '기분 좋음'],
  '감사한 마음': ['고마움', '감사함', '땡큐'],
  '벅찬 감동': ['감동', '뭉클함', '울컥함'],
  '진한 여운': ['여운', '느낌', '기분'],
  '깊은 울림': ['울림', '감동', '느낌'],
  '특별한 의미': ['의미', '뜻', '가치'],
  '소중한 추억': ['추억', '기억', '그때'],
  '아름다운 풍경': ['풍경', '뷰', '경치'],
  '멋진 하루': ['좋은 하루', '오늘', '굿데이'],
  '완벽한 날씨': ['좋은 날씨', '날씨 좋음', '화창함'],
  '최고의 순간': ['최고', '짱', '굿'],
  '환상적인': ['대박', '짱', '최고'],
  '매력적인': ['매력 있는', '멋진', '예쁜'],
  '인상적인': ['인상 깊은', '기억에 남는', '특별한'],
  '잊지 못할': ['못 잊을', '기억날', '생각날'],
  '영원히 기억될': ['오래 기억될', '기억에 남을', '못 잊을'],
  '마음 속 깊이': ['마음에', '가슴에', '기억에'],
  '가슴 속에': ['마음에', '기억에', '머릿속에'],
  '언제까지나': ['계속', '앞으로도', '늘'],
  '영원토록': ['계속', '쭉', '늘'],
  '끝없이': ['계속', '많이', '자주'],
  '무한한': ['많은', '큰', '넓은'],
  '한없는': ['많은', '큰', '깊은'],
};

// 반복적인 문장 패턴
const REPETITIVE_PATTERNS = [
  /(.+[을를이가]) (.+[을를이가]) (.+[을를이가])/g, // 같은 조사 3번 연속
  /([^.!?]+서 ){3,}/g, // ~서 3번 이상 반복
  /([^.!?]+고 ){3,}/g, // ~고 3번 이상 반복
  /([^.!?]+는 ){3,}/g, // ~는 3번 이상 반복
  /([^.!?]+한 ){3,}/g, // ~한 3번 이상 반복
];

// 딱딱한 종결어미를 자연스럽게
const ENDING_REPLACEMENTS: Record<string, string[]> = {
  '습니다.': ['어요.', '네요.', '아요.', '어요~', '네요!'],
  '입니다.': ['이에요.', '예요.', '이네요.', '예요~', '이에요!'],
  '합니다.': ['해요.', '하네요.', '해요~', '하고 있어요.'],
  '됩니다.': ['돼요.', '되네요.', '될 것 같아요.', '되더라구요.'],
  '있습니다.': ['있어요.', '있네요.', '있어요~', '있더라구요.'],
  '없습니다.': ['없어요.', '없네요.', '없어요~', '없더라구요.'],
  '같습니다.': ['같아요.', '같네요.', '것 같아요.', '것 같더라구요.'],
  '겠습니다.': ['겠어요.', '겠네요.', '것 같아요.', '거예요.'],
};

// 이모지 자연스럽게 추가/조정
const NATURAL_EMOJIS = ['😊', '😄', '🥰', '💕', '✨', '🌟', '☀️', '🌈', '💫', '🎉', '🙌', '👍', '💯', '🔥', '❤️'];

/**
 * 콘텐츠를 더 자연스럽게 만드는 메인 함수
 */
export function naturalizeContent(content: string, options?: {
  tone?: string;
  platform?: string;
}): string {
  let result = content;
  
  // 디버깅 로그 추가
  console.log('naturalizeContent input:', {
    content,
    length: content.length,
    firstPart: content.substring(0, 100)
  });
  
  // 1. 상투적인 표현 대체
  result = replaceClichePhrases(result);
  
  // 2. 반복적인 패턴 수정 - 일시적으로 비활성화
  // result = fixRepetitivePatterns(result);
  
  // 3. 딱딱한 종결어미 수정
  result = naturalizeEndings(result);
  
  // 4. 이모지 조정
  result = adjustEmojis(result, options?.tone);
  
  // 5. 플랫폼별 추가 처리
  if (options?.platform === 'instagram') {
    result = makeInstagramFriendly(result);
  }
  
  console.log('naturalizeContent output:', {
    result,
    length: result.length
  });
  
  return result;
}

/**
 * 상투적인 표현을 자연스러운 표현으로 대체
 */
function replaceClichePhrases(content: string): string {
  let result = content;
  
  // 정확한 매칭을 위해 우선순위가 높은 긴 구문부터 대체
  const sortedPhrases = Object.keys(NATURAL_REPLACEMENTS).sort((a, b) => b.length - a.length);
  
  sortedPhrases.forEach(phrase => {
    const replacements = NATURAL_REPLACEMENTS[phrase];
    if (result.includes(phrase) && replacements.length > 0) {
      const replacement = replacements[Math.floor(Math.random() * replacements.length)];
      result = result.replace(new RegExp(phrase, 'g'), replacement);
    }
  });
  
  return result;
}

/**
 * 반복적인 패턴 수정
 */
function fixRepetitivePatterns(content: string): string {
  let result = content;
  
  // 같은 조사가 너무 많이 반복되면 일부를 다른 표현으로 변경
  REPETITIVE_PATTERNS.forEach(pattern => {
    const matches = result.match(pattern);
    if (matches && matches.length > 0) {
      console.log('Found repetitive pattern:', matches[0]);
      // 반복되는 부분을 찾아서 일부만 유지
      const parts = matches[0].split(/[을를이가서고는한]/);
      if (parts.length > 3) {
        // 중간 부분을 줄임 - 단, 전체 내용을 잘라내지 않도록 주의
        const shortened = parts.slice(0, 2).join('. ') + '. ' + parts[parts.length - 1];
        result = result.replace(matches[0], shortened);
      }
    }
  });
  
  return result;
}

/**
 * 딱딱한 종결어미를 자연스럽게 변경
 */
function naturalizeEndings(content: string): string {
  let result = content;
  
  Object.entries(ENDING_REPLACEMENTS).forEach(([formal, casual]) => {
    // 문장 끝에 있는 경우만 대체
    const regex = new RegExp(formal.replace('.', '\\.') + '(?=\\s|$)', 'g');
    result = result.replace(regex, () => {
      const replacement = casual[Math.floor(Math.random() * casual.length)];
      return replacement;
    });
  });
  
  return result;
}

/**
 * 이모지 조정
 */
function adjustEmojis(content: string, tone?: string): string {
  let result = content;
  
  // 이모지가 너무 많으면 줄임
  const emojiCount = (result.match(/[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]|[\u{2600}-\u{26FF}]|[\u{2700}-\u{27BF}]/gu) || []).length;
  
  if (emojiCount > 3) {
    // 일부 이모지 제거
    let count = 0;
    result = result.replace(/[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]|[\u{2600}-\u{26FF}]|[\u{2700}-\u{27BF}]/gu, (match) => {
      count++;
      return count > 2 ? '' : match;
    });
  } else if (emojiCount === 0 && tone !== 'professional') {
    // 이모지가 없으면 자연스럽게 하나 추가
    const emoji = NATURAL_EMOJIS[Math.floor(Math.random() * NATURAL_EMOJIS.length)];
    result = result.trim() + ' ' + emoji;
  }
  
  return result;
}

/**
 * 인스타그램에 맞게 추가 처리
 */
function makeInstagramFriendly(content: string): string {
  let result = content;
  
  // 너무 긴 문단이면 줄바꿈 추가
  const sentences = result.split(/(?<=[.!?])\s+/);
  if (sentences.length > 3) {
    // 2-3문장마다 줄바꿈
    const chunks = [];
    for (let i = 0; i < sentences.length; i += 2) {
      chunks.push(sentences.slice(i, i + 2).join(' '));
    }
    result = chunks.join('\n\n');
  }
  
  // 해시태그가 본문에 섞여있으면 끝으로 이동
  const hashtags = result.match(/#[^\s]+/g) || [];
  if (hashtags.length > 0) {
    result = result.replace(/#[^\s]+/g, '').trim();
    result += '\n\n' + hashtags.join(' ');
  }
  
  return result;
}

/**
 * 사진 글쓰기용 특별 처리
 */
export function naturalizePhotoContent(content: string): string {
  let result = content;
  
  // 사진 설명같은 표현 제거
  const photoDescriptionPhrases = [
    '사진 속',
    '사진에는',
    '사진을 보면',
    '배경에는',
    '배경에서',
    '전경에는',
    '왼쪽에는',
    '오른쪽에는',
    '중앙에는',
    '보입니다',
    '보이네요',
    '있습니다',
    '담겨 있',
    '찍혀 있',
    '나타나 있',
    '입고 있으며',
    '입고 있고',
    '착용하고 있',
    '포즈를 취하고',
    '어우러져',
    '자아내고',
    '자아내',
    '손에는',
    '두 사람은',
    '한 사람은',
    '여자는',
    '남자는',
    '왼쪽',
    '오른쪽',
    '위쪽',
    '아래쪽',
    '앞쪽',
    '뒤쪽',
  ];
  
  photoDescriptionPhrases.forEach(phrase => {
    result = result.replace(new RegExp(phrase, 'g'), '');
  });
  
  // 색상 설명 간단하게
  result = result.replace(/우아한 [가-힣]+ 치마와 [가-힣]+ 저고리/g, '한복');
  result = result.replace(/부드러운 [가-힣]+ 저고리와 바지/g, '한복');
  result = result.replace(/고풍스러운/g, '멋진');
  result = result.replace(/푸른 나무들이/g, '나무들이');
  
  // 공백 정리
  result = result.replace(/\s+/g, ' ').trim();
  
  // 일반 자연화 처리
  result = naturalizeContent(result);
  
  // 문장이 너무 설명적이면 감정 표현으로 변경
  if (result.length > 100 && !result.includes('느낌') && !result.includes('기분')) {
    const feelings = [
      '\n이런 날이 좋다.',
      '\n오늘따라 기분이 좋네.',
      '\n이런 순간이 행복이지.',
      '\n요즘 이런 게 소확행인가봐.',
      '\n가끔은 이런 여유도 필요해.',
    ];
    result += feelings[Math.floor(Math.random() * feelings.length)];
  }
  
  return result;
}
