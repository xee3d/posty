require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Flipper 비활성화 (안정성을 위해)
flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Posty' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Firebase 의존성 (버전 명시)
  pod 'Firebase/Analytics', '~> 10.0'
  pod 'Firebase/Auth', '~> 10.0'
  pod 'Firebase/Firestore', '~> 10.0'

  # React Native Firebase
  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'
  pod 'RNFBAuth', :path => '../node_modules/@react-native-firebase/auth'
  pod 'RNFBFirestore', :path => '../node_modules/@react-native-firebase/firestore'
  pod 'RNFBAnalytics', :path => '../node_modules/@react-native-firebase/analytics'

  # Google Sign In
  pod 'GoogleSignIn', '~> 7.0'
  pod 'RNGoogleSignin', :path => '../node_modules/@react-native-google-signin/google-signin'

  # Apple Authentication
  pod 'RNAppleAuthentication', :path => '../node_modules/@invertase/react-native-apple-authentication'

  # Social Login SDKs
  pod 'KakaoSDK'
  
  # Facebook SDK (필요시)
  # pod 'FBSDKCoreKit'
  # pod 'FBSDKLoginKit'

  # Media & Camera
  pod 'react-native-image-picker', :path => '../node_modules/react-native-image-picker'
  pod 'react-native-image-resizer', :path => '../node_modules/react-native-image-resizer'

  # Audio
  pod 'react-native-sound', :path => '../node_modules/react-native-sound'

  # In-App Purchase
  pod 'react-native-iap', :path => '../node_modules/react-native-iap'

  # Permissions
  pod 'Permission-Camera', :path => "../node_modules/react-native-permissions/ios/Camera"
  pod 'Permission-PhotoLibrary', :path => "../node_modules/react-native-permissions/ios/PhotoLibrary"
  pod 'Permission-Microphone', :path => "../node_modules/react-native-permissions/ios/Microphone"
  pod 'Permission-LocationWhenInUse', :path => "../node_modules/react-native-permissions/ios/LocationWhenInUse"

  # AdMob (필요시)
  # pod 'Google-Mobile-Ads-SDK', '~> 10.0'

  target 'PostyTests' do
    inherit! :complete
  end

  post_install do |installer|
    # React Native 기본 설정
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    
    # 모든 타겟에 대한 빌드 설정 통일
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Swift 버전 통일
        config.build_settings['SWIFT_VERSION'] = '5.9'
        
        # iOS 배포 타겟 통일
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        
        # Bitcode 비활성화 (React Native 호환성)
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # 아키텍처 설정 (Apple Silicon Mac 호환성)
        if target.name == 'React-Core' or target.name.start_with?('React-')
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
        
        # 컴파일러 플래그
        config.build_settings['OTHER_CFLAGS'] = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1'
        
        # 링커 플래그
        config.build_settings['OTHER_LDFLAGS'] = '-ObjC'
        
        # 헤더 검색 경로
        config.build_settings['HEADER_SEARCH_PATHS'] ||= []
        config.build_settings['HEADER_SEARCH_PATHS'] << '$(SRCROOT)/../node_modules/react-native/React/**'
        
        # 라이브러리 검색 경로
        config.build_settings['LIBRARY_SEARCH_PATHS'] ||= []
        config.build_settings['LIBRARY_SEARCH_PATHS'] << '$(SRCROOT)/../node_modules/react-native/ReactCommon/**'
        
        # 프레임워크 검색 경로
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= []
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '$(SRCROOT)/../node_modules/react-native/React/**'
      end
    end
    
    # Firebase 특별 설정 (iOS 11.0+ 호환성)
    installer.pods_project.targets.each do |target|
      if target.name.start_with?('Firebase')
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
        end
      end
    end
    
    # Google SDK 특별 설정
    installer.pods_project.targets.each do |target|
      if target.name.start_with?('Google')
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
          config.build_settings['SWIFT_VERSION'] = '5.9'
        end
      end
    end
    
    # KakaoSDK 특별 설정
    installer.pods_project.targets.each do |target|
      if target.name.start_with?('Kakao')
        target.build_configurations.each do |config|
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
          config.build_settings['SWIFT_VERSION'] = '5.9'
        end
      end
    end
    
    # React Native 관련 타겟들에 대한 특별 설정
    installer.pods_project.targets.each do |target|
      if target.name.start_with?('React') || target.name.start_with?('RCT') || target.name.start_with?('RN')
        target.build_configurations.each do |config|
          # C++ 표준 라이브러리 설정
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
          config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
          
          # ARC 설정
          config.build_settings['CLANG_ENABLE_OBJC_ARC'] = 'YES'
          
          # 모듈 설정
          config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
          
          # 경고 설정
          config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
          config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        end
      end
    end
    
    # 모든 타겟에 대한 공통 최적화 설정
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # 디버그 정보 포맷
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
        
        # 컴파일 최적화
        if config.name == 'Release'
          config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '3'
          config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
        else
          config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
          config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
        end
        
        # 죽은 코드 제거
        config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
        
        # 스트립 설정
        config.build_settings['STRIP_INSTALLED_PRODUCT'] = config.name == 'Release' ? 'YES' : 'NO'
        
        # 심볼 숨김
        config.build_settings['GCC_SYMBOLS_PRIVATE_EXTERN'] = 'YES'
      end
    end
    
    puts "✅ Podfile post_install 설정 완료"
    puts "📱 iOS 11.0+ 호환성 확보"
    puts "🔧 Swift 5.9 버전 통일"
    puts "🚀 React Native 0.74.5 최적화 적용"
  end
end
