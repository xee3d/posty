import React, { useState } from 'react';
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  StyleSheet,
  SafeAreaView,
  Alert,
  Dimensions,
} from 'react-native';
import { COLORS, SPACING } from '../utils/constants';
import { SUBSCRIPTION_PLANS, TOKEN_USAGE } from '../utils/adConfig';
import Icon from 'react-native-vector-icons/MaterialIcons';
import { useAppTheme } from '../hooks/useAppTheme';

const { width: screenWidth } = Dimensions.get('window');

interface SubscriptionScreenProps {
  navigation: any;
  currentPlan?: 'free' | 'premium' | 'pro';
}

export const SubscriptionScreen: React.FC<SubscriptionScreenProps> = ({ 
  navigation, 
  currentPlan = 'free' 
}) => {
  const { colors, isDark } = useAppTheme();
  const [selectedPlan, setSelectedPlan] = useState<'free' | 'premium' | 'pro'>('premium');

  const handleSubscribe = () => {
    if (selectedPlan === 'free') {
      navigation.goBack();
      return;
    }

    Alert.alert(
      '구독 확인',
      `${SUBSCRIPTION_PLANS[selectedPlan].name} 플랜을 구독하시겠습니까?`,
      [
        { text: '취소', style: 'cancel' },
        { 
          text: '구독하기', 
          onPress: () => {
            console.log('Subscribe to:', selectedPlan);
            navigation.goBack();
          }
        },
      ]
    );
  };

  const planColors = {
    free: '#6B7280',
    premium: '#8B5CF6',
    pro: '#F59E0B',
  };

  const renderPlanCard = (planKey: 'free' | 'premium' | 'pro') => {
    const plan = SUBSCRIPTION_PLANS[planKey];
    const isSelected = selectedPlan === planKey;
    const isCurrent = currentPlan === planKey;
    const isPopular = planKey === 'premium';
    const planColor = planColors[planKey];

    return (
      <TouchableOpacity
        key={planKey}
        style={[
          styles.planCard,
          isSelected && styles.selectedPlanCard,
          isSelected && { borderColor: planColor }
        ]}
        onPress={() => setSelectedPlan(planKey)}
        activeOpacity={0.9}
      >
        {isPopular && (
          <View style={[styles.popularBadge, { backgroundColor: planColor }]}>
            <Text style={styles.popularBadgeText}>인기</Text>
          </View>
        )}

        {/* 플랜 헤더 */}
        <View style={styles.planHeader}>
          <View style={styles.planTitleRow}>
            <Text style={[styles.planName, { color: isSelected ? planColor : colors.text.primary }]}>
              {plan.name}
            </Text>
            {isCurrent && (
              <View style={styles.currentBadge}>
                <Text style={styles.currentBadgeText}>현재 이용중</Text>
              </View>
            )}
          </View>
          {isSelected && (
            <View style={[styles.selectedCheckmark, { backgroundColor: planColor }]}>
              <Icon name="check" size={16} color="#FFFFFF" />
            </View>
          )}
        </View>

        {/* 가격 */}
        <View style={styles.priceContainer}>
          <Text style={[styles.price, isSelected && { color: planColor }]}>
            {plan.price === 0 ? '무료' : `₩${plan.price.toLocaleString()}`}
          </Text>
          <Text style={styles.priceUnit}>/월</Text>
        </View>

        {/* 토큰 정보 */}
        <View style={[styles.tokenInfo, { backgroundColor: planColor + '15' }]}>
          <Icon name="flash-on" size={18} color={planColor} />
          <Text style={[styles.tokenText, { color: planColor }]}>
            {plan.features.dailyLimit === -1 
              ? '무제한 토큰' 
              : `하루 ${plan.features.dailyLimit}개`}
          </Text>
        </View>

        {/* 주요 기능 */}
        <View style={styles.features}>
          {plan.features.extraFeatures?.slice(0, 3).map((feature, index) => (
            <View key={index} style={styles.featureItem}>
              <Icon name="check" size={16} color={isSelected ? planColor : '#10B981'} />
              <Text style={styles.featureText}>{feature}</Text>
            </View>
          ))}
        </View>
      </TouchableOpacity>
    );
  };

  const tokenExamples = [
    { icon: '✍️', title: '새글 생성', tokens: 1, desc: '주제로 글 작성' },
    { icon: '📸', title: '사진 분석', tokens: 1, desc: '이미지 기반 글' },
    { icon: '✨', title: '문장 정리', tokens: 1, desc: '텍스트 다듬기' },
    { icon: '🎨', title: '톤 변경', tokens: 0, desc: '무료로 변경' },
    { icon: '📏', title: '길이 조절', tokens: 0, desc: '무료로 조정' },
  ];

  const styles = createStyles(colors, isDark);

  return (
    <SafeAreaView style={styles.container}>
      {/* 헤더 */}
      <View style={styles.header}>
        <TouchableOpacity 
          style={styles.backButton}
          onPress={() => navigation.goBack()}
        >
          <Icon name="arrow-back" size={24} color={colors.text.primary} />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>구독 플랜</Text>
        <View style={{ width: 40 }} />
      </View>

      <ScrollView 
        style={styles.content}
        showsVerticalScrollIndicator={false}
      >
        {/* 메인 타이틀 */}
        <View style={styles.heroSection}>
          <Text style={styles.heroTitle}>
            포스티와 함께{'\n'}더 많은 콘텐츠를 만들어보세요
          </Text>
          <Text style={styles.heroSubtitle}>
            AI가 당신의 크리에이티브 파트너가 되어드립니다
          </Text>
        </View>

        {/* 플랜 카드들 */}
        <View style={styles.plansContainer}>
          {renderPlanCard('free')}
          {renderPlanCard('premium')}
          {renderPlanCard('pro')}
        </View>

        {/* 토큰 사용 안내 */}
        <View style={styles.tokenSection}>
          <Text style={styles.sectionTitle}>토큰 사용 가이드</Text>
          <Text style={styles.sectionSubtitle}>언제 토큰이 사용되나요?</Text>
          
          <View style={styles.tokenGrid}>
            {tokenExamples.map((item, index) => (
              <View key={index} style={styles.tokenCard}>
                <Text style={styles.tokenIcon}>{item.icon}</Text>
                <Text style={styles.tokenTitle}>{item.title}</Text>
                <Text style={styles.tokenDesc}>{item.desc}</Text>
                <View style={[
                  styles.tokenBadge,
                  { backgroundColor: item.tokens === 0 ? '#10B981' : '#8B5CF6' }
                ]}>
                  <Text style={styles.tokenBadgeText}>
                    {item.tokens === 0 ? '무료' : `${item.tokens}토큰`}
                  </Text>
                </View>
              </View>
            ))}
          </View>

          <View style={styles.infoBox}>
            <Icon name="info-outline" size={20} color={colors.primary} />
            <Text style={styles.infoText}>
              무료 플랜은 매일 오전 12시에 10개의 토큰이 자동으로 충전됩니다
            </Text>
          </View>
        </View>

        {/* 혜택 섹션 */}
        <View style={styles.benefitsSection}>
          <Text style={styles.sectionTitle}>프리미엄 혜택</Text>
          
          <View style={styles.benefitCard}>
            <View style={[styles.benefitIcon, { backgroundColor: '#8B5CF6' + '20' }]}>
              <Icon name="flash-on" size={24} color="#8B5CF6" />
            </View>
            <View style={styles.benefitContent}>
              <Text style={styles.benefitTitle}>더 많은 토큰</Text>
              <Text style={styles.benefitDesc}>
                프리미엄은 50개, 프로는 무제한 토큰을 제공합니다
              </Text>
            </View>
          </View>

          <View style={styles.benefitCard}>
            <View style={[styles.benefitIcon, { backgroundColor: '#EC4899' + '20' }]}>
              <Icon name="auto-awesome" size={24} color="#EC4899" />
            </View>
            <View style={styles.benefitContent}>
              <Text style={styles.benefitTitle}>고급 AI 모델</Text>
              <Text style={styles.benefitDesc}>
                GPT-4 기반의 더 창의적이고 정확한 콘텐츠 생성
              </Text>
            </View>
          </View>

          <View style={styles.benefitCard}>
            <View style={[styles.benefitIcon, { backgroundColor: '#10B981' + '20' }]}>
              <Icon name="block" size={24} color="#10B981" />
            </View>
            <View style={styles.benefitContent}>
              <Text style={styles.benefitTitle}>광고 제거</Text>
              <Text style={styles.benefitDesc}>
                방해받지 않고 콘텐츠 제작에만 집중할 수 있습니다
              </Text>
            </View>
          </View>
        </View>

        <View style={styles.bottomSpace} />
      </ScrollView>

      {/* 하단 CTA */}
      <View style={styles.bottomCTA}>
        <TouchableOpacity 
          style={[
            styles.subscribeButton,
            { backgroundColor: selectedPlan === 'free' ? colors.text.tertiary : planColors[selectedPlan] }
          ]} 
          onPress={handleSubscribe}
          activeOpacity={0.8}
        >
          <Text style={styles.subscribeButtonText}>
            {selectedPlan === 'free' 
              ? '무료로 계속하기' 
              : `${SUBSCRIPTION_PLANS[selectedPlan].priceDisplay}로 시작하기`}
          </Text>
        </TouchableOpacity>
        
        <Text style={styles.legalText}>
          구독은 언제든지 취소할 수 있습니다
        </Text>
      </View>
    </SafeAreaView>
  );
};

const createStyles = (colors: any, isDark: boolean) => 
  StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: colors.background,
    },
    header: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between',
      paddingHorizontal: SPACING.medium,
      paddingVertical: SPACING.medium,
      borderBottomWidth: 1,
      borderBottomColor: colors.border,
    },
    backButton: {
      width: 40,
      height: 40,
      justifyContent: 'center',
      alignItems: 'center',
    },
    headerTitle: {
      fontSize: 18,
      fontWeight: '600',
      color: colors.text.primary,
    },
    content: {
      flex: 1,
    },
    heroSection: {
      paddingHorizontal: SPACING.large,
      paddingTop: SPACING.large,
      paddingBottom: SPACING.xl,
    },
    heroTitle: {
      fontSize: 28,
      fontWeight: '700',
      color: colors.text.primary,
      lineHeight: 36,
      marginBottom: SPACING.small,
    },
    heroSubtitle: {
      fontSize: 16,
      color: colors.text.secondary,
      lineHeight: 24,
    },
    plansContainer: {
      paddingHorizontal: SPACING.medium,
      gap: SPACING.medium,
    },
    planCard: {
      backgroundColor: colors.surface,
      borderRadius: 16,
      padding: SPACING.large,
      marginBottom: SPACING.medium,
      borderWidth: 2,
      borderColor: colors.border,
      position: 'relative',
    },
    selectedPlanCard: {
      shadowColor: '#000',
      shadowOffset: { width: 0, height: 4 },
      shadowOpacity: 0.15,
      shadowRadius: 12,
      elevation: 5,
    },
    popularBadge: {
      position: 'absolute',
      top: -10,
      right: 20,
      paddingHorizontal: 12,
      paddingVertical: 4,
      borderRadius: 12,
    },
    popularBadgeText: {
      color: '#FFFFFF',
      fontSize: 12,
      fontWeight: '600',
    },
    planHeader: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      marginBottom: SPACING.small,
    },
    planTitleRow: {
      flexDirection: 'row',
      alignItems: 'center',
      gap: SPACING.small,
    },
    planName: {
      fontSize: 20,
      fontWeight: '700',
    },
    currentBadge: {
      backgroundColor: colors.lightGray,
      paddingHorizontal: 8,
      paddingVertical: 4,
      borderRadius: 8,
    },
    currentBadgeText: {
      fontSize: 11,
      color: colors.text.secondary,
      fontWeight: '500',
    },
    selectedCheckmark: {
      width: 24,
      height: 24,
      borderRadius: 12,
      justifyContent: 'center',
      alignItems: 'center',
    },
    priceContainer: {
      flexDirection: 'row',
      alignItems: 'baseline',
      marginBottom: SPACING.medium,
    },
    price: {
      fontSize: 32,
      fontWeight: '700',
      color: colors.text.primary,
    },
    priceUnit: {
      fontSize: 16,
      color: colors.text.secondary,
      marginLeft: 4,
    },
    tokenInfo: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 12,
      paddingVertical: 8,
      borderRadius: 8,
      marginBottom: SPACING.medium,
      gap: 6,
    },
    tokenText: {
      fontSize: 14,
      fontWeight: '600',
    },
    features: {
      gap: SPACING.small,
    },
    featureItem: {
      flexDirection: 'row',
      alignItems: 'center',
      gap: SPACING.small,
    },
    featureText: {
      fontSize: 14,
      color: colors.text.secondary,
      flex: 1,
    },
    tokenSection: {
      marginTop: SPACING.xl,
      paddingHorizontal: SPACING.large,
    },
    sectionTitle: {
      fontSize: 20,
      fontWeight: '700',
      color: colors.text.primary,
      marginBottom: SPACING.xs,
    },
    sectionSubtitle: {
      fontSize: 14,
      color: colors.text.secondary,
      marginBottom: SPACING.large,
    },
    tokenGrid: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      gap: SPACING.small,
      marginBottom: SPACING.large,
    },
    tokenCard: {
      width: (screenWidth - SPACING.large * 2 - SPACING.small) / 2,
      backgroundColor: colors.surface,
      borderRadius: 12,
      padding: SPACING.medium,
      alignItems: 'center',
    },
    tokenIcon: {
      fontSize: 32,
      marginBottom: SPACING.xs,
    },
    tokenTitle: {
      fontSize: 14,
      fontWeight: '600',
      color: colors.text.primary,
      marginBottom: 4,
    },
    tokenDesc: {
      fontSize: 12,
      color: colors.text.secondary,
      marginBottom: SPACING.small,
    },
    tokenBadge: {
      paddingHorizontal: 8,
      paddingVertical: 4,
      borderRadius: 6,
    },
    tokenBadgeText: {
      fontSize: 11,
      fontWeight: '600',
      color: '#FFFFFF',
    },
    infoBox: {
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: colors.primary + '10',
      padding: SPACING.medium,
      borderRadius: 12,
      gap: SPACING.small,
    },
    infoText: {
      fontSize: 13,
      color: colors.text.primary,
      flex: 1,
      lineHeight: 18,
    },
    benefitsSection: {
      marginTop: SPACING.xl,
      paddingHorizontal: SPACING.large,
    },
    benefitCard: {
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: colors.surface,
      padding: SPACING.medium,
      borderRadius: 12,
      marginBottom: SPACING.small,
      gap: SPACING.medium,
    },
    benefitIcon: {
      width: 48,
      height: 48,
      borderRadius: 12,
      justifyContent: 'center',
      alignItems: 'center',
    },
    benefitContent: {
      flex: 1,
    },
    benefitTitle: {
      fontSize: 15,
      fontWeight: '600',
      color: colors.text.primary,
      marginBottom: 4,
    },
    benefitDesc: {
      fontSize: 13,
      color: colors.text.secondary,
      lineHeight: 18,
    },
    bottomSpace: {
      height: 100,
    },
    bottomCTA: {
      position: 'absolute',
      bottom: 0,
      left: 0,
      right: 0,
      backgroundColor: colors.background,
      paddingHorizontal: SPACING.medium,
      paddingTop: SPACING.medium,
      paddingBottom: SPACING.large,
      borderTopWidth: 1,
      borderTopColor: colors.border,
    },
    subscribeButton: {
      paddingVertical: 16,
      borderRadius: 12,
      alignItems: 'center',
      marginBottom: SPACING.small,
    },
    subscribeButtonText: {
      color: '#FFFFFF',
      fontSize: 16,
      fontWeight: '600',
    },
    legalText: {
      fontSize: 12,
      color: colors.text.tertiary,
      textAlign: 'center',
    },
  });

export default SubscriptionScreen;
